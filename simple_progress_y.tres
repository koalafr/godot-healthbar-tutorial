[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=12]
output_port_for_preview = 0
uniform_name = "color"

[sub_resource type="VisualShaderNodeInput" id=13]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]

[sub_resource type="VisualShaderNodeCompare" id=15]
output_port_for_preview = 0
function = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=16]
uniform_name = "health"

[sub_resource type="VisualShaderNodeVectorInterp" id=17]

[sub_resource type="VisualShaderNodeVectorOp" id=9]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform vec4 color : hint_color;
uniform float health;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = color.rgb;
	float n_out2p1 = color.a;

// VectorOp:8
	vec3 n_in8p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out8p0 = n_out2p0 * n_in8p1;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// ScalarUniform:6
	float n_out6p0 = health;

// Compare:5
	bool n_out5p0 = n_out4p1>=n_out6p0;

// VectorMix:7
	vec3 n_out7p0 = mix(n_out2p0, n_out8p0, vec3(n_out5p0 ? 1.0 : 0.0));

// Output:0
	COLOR.rgb = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -292.824, -127.784 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 760, 100 )
nodes/fragment/2/node = SubResource( 12 )
nodes/fragment/2/position = Vector2( -160, 220 )
nodes/fragment/3/node = SubResource( 13 )
nodes/fragment/3/position = Vector2( -420, 0 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( -160, 0 )
nodes/fragment/5/node = SubResource( 15 )
nodes/fragment/5/position = Vector2( 180, -60 )
nodes/fragment/6/node = SubResource( 16 )
nodes/fragment/6/position = Vector2( -140, 120 )
nodes/fragment/7/node = SubResource( 17 )
nodes/fragment/7/position = Vector2( 400, 160 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 140, 200 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 6, 0, 5, 1, 2, 0, 7, 0, 7, 0, 0, 0, 5, 0, 7, 2, 2, 0, 8, 0, 8, 0, 7, 1, 4, 1, 5, 0 )
